{"version":3,"sources":["components/layouts/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","branding","this","props","className","href","to","Component","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","data","value","children","Consumer","Contact","showContactInfo","handleClick","deleteHandleClick","a","delete","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","Axios","post","history","push","target","EditContact","match","params","updCont","put","About","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f1ff0ece.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const { branding } = this.props;\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\">\r\n            {branding}\r\n          </a>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  <i className=\"fas fa-home\"></i>Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                  <i className=\"fas fa-plus\"></i>Add\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                  <i className=\"fas fa-question\"></i>About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({\r\n      contacts: res.data,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo,\r\n    });\r\n  };\r\n\r\n  deleteHandleClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  className=\"fas fa-sort-down\"\r\n                  onClick={this.handleClick}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.deleteHandleClick.bind(this, id, dispatch)}\r\n                ></i>\r\n                <Link to={`/contact/update/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"black\",\r\n                      float: \"right\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <div>\r\n              <h1 className=\"display-4\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layouts/TextInputGroup\";\r\nimport Axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: { name: \"Name is required\" },\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: { email: \"Email is required\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: { phone: \"Phone is required\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name: name,\r\n      email: email,\r\n      phone: phone,\r\n    };\r\n\r\n    const res = await Axios.post(\r\n      `https://jsonplaceholder.typicode.com/users`,\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Add Contacts</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      placeholder=\"Enter Name\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      placeholder=\"Enter Email\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      placeholder=\"Enter Phone\"\r\n                      name=\"phone\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Add Contact\"\r\n                      className=\"btn btn-light btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport TextInputGroup from \"../layouts/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: { name: \"Name is required\" },\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: { email: \"Email is required\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: { phone: \"Phone is required\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    const updCont = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updCont\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Update Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      placeholder=\"Enter Name\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      placeholder=\"Enter Email\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      placeholder=\"Enter Phone\"\r\n                      name=\"phone\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Update Contact\"\r\n                      className=\"btn btn-light btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">Hello</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/layouts/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/update/:id\" component={EditContact} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}